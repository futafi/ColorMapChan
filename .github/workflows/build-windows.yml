name: Build Windows Executable

on:
  push:
    branches-ignore:
      - main
    # branches: [ feat/windows-exe-build ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: write
    
jobs:
  build:
    # PRがマージされた場合のみ実行（PR closeの場合）
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Generate version
      id: version
      run: |
        date=$(date +'%Y%m%d')
        echo "date=${date}" >> $GITHUB_OUTPUT
        echo "version=${date}.${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --icon=icon.ico --name=ColorMapChan-${{ steps.version.outputs.version }} --add-data "icon.ico;." --paths=. src/main.py
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ColorMapChan-${{ steps.version.outputs.version }}
        path: dist/ColorMapChan-${{ steps.version.outputs.version }}.exe
        
    - name: Create Release and Upload Asset
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        files: ./dist/ColorMapChan-${{ steps.version.outputs.version }}.exe
        body: |
          ColorMapChan Windows実行ファイル
          
          ## ビルド情報
          - バージョン: v${{ steps.version.outputs.version }}
          - ビルド日時: ${{ steps.version.outputs.date }}
          
          ## 変更内容
          ${{ github.event.pull_request.title }}
          
          ${{ github.event.pull_request.body }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
